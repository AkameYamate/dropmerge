{"version":3,"sources":["assets/metamask.png","component/ConnectBtn.js","App.js","index.js"],"names":["ConnectBtn","useState","address","setAddress","setResult","tbladdresses","setTblAddresses","tblcounts","setTblCounts","flag","setFlag","current","Date","date","getDate","getMonth","getFullYear","SaveScore","setTimeout","document","getElementById","value","axios","post","score","then","res","console","log","catch","err","data","addresses","counts","handleConnect","window","ethereum","request","method","accs","length","sessionStorage","setItem","dater","useEffect","setInterval","style","float","marginRight","marginTop","backgroundColor","padding","borderColor","borderRadius","fontSize","color","onClick","alt","metamaskicon","src","width","height","slice","id","display","disabled","map","itemAddress","itemCounts","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.637bdf91.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/metamask.7d8c66c4.png\";","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport metamaskicon from \"../assets/metamask.png\";\r\n\r\nconst ConnectBtn = () => {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [result, setResult] = useState(0);\r\n  const [tbladdresses, setTblAddresses] = useState([]);\r\n  const [tblcounts, setTblCounts] = useState([]);\r\n  const [flag, setFlag] = useState(\"\");\r\n\r\n  const current = new Date();\r\n  const date = `${current.getDate()}/${\r\n    current.getMonth() + 1\r\n  }/${current.getFullYear()}`;\r\n\r\n  const SaveScore = () => {\r\n    setTimeout(function () {\r\n      setFlag(\"flag\");\r\n    }, 0);\r\n    setTimeout(function () {\r\n      setFlag(\"\");\r\n    }, 5000);\r\n\r\n    setResult(document.getElementById(\"game_mark\").value);\r\n\r\n    axios\r\n      .post(\"/api/saveScore\", {\r\n        score: document.getElementById(\"game_mark\").value,\r\n        address: address,\r\n        date: date,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    axios\r\n      .post(\"/api/getCount\", { date: date })\r\n      .then((res) => {\r\n        setTblAddresses(res.data.addresses);\r\n        setTblCounts(res.data.counts);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleConnect = () => {\r\n    const { ethereum } = window;\r\n\r\n    if (ethereum) {\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((accs) => {\r\n          if (accs.length) {\r\n            setAddress(accs[0]);\r\n\r\n            window.sessionStorage.setItem(\"connect\", \"1\");\r\n\r\n            axios\r\n              .post(\"/api/saveAddress\", {\r\n                address: accs[0],\r\n                dater: date,\r\n              })\r\n              .then((res) => {\r\n                console.log(res);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n            axios\r\n              .post(\"/api/getCount\", { date: date })\r\n              .then((res) => {\r\n                setTblAddresses(res.data.addresses);\r\n                setTblCounts(res.data.counts);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"/api/getCount\", { date: date })\r\n      .then((res) => {\r\n        setTblAddresses(res.data.addresses);\r\n        setTblCounts(res.data.counts);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    axios\r\n      .post(\"/api/deleteCount\", { date: date })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n\r\n  const getRestart = () =>{\r\n     if(document.getElementById(\"game_restart\").value ==\"save\"){\r\n       handleConnect();\r\n      SaveScore();\r\n\r\n       document.getElementById(\"game_restart\").value =\"\";\r\n  \r\n\r\n     }\r\n  }\r\n  setInterval(getRestart,3000);\r\n  return (\r\n    <>\r\n      <button\r\n        style={{\r\n          float: \"right\",\r\n          marginRight: \"20px\",\r\n          marginTop: \"20px\",\r\n          backgroundColor: \"transparent\",\r\n          padding: \"10px 30px\",\r\n          borderColor: \"blue\",\r\n          borderRadius: \"20px\",\r\n          fontSize: \"20px\",\r\n          color: \"white\",\r\n        }}\r\n        onClick={handleConnect}\r\n      >\r\n        <img\r\n          alt={metamaskicon}\r\n          src={metamaskicon}\r\n          width={20}\r\n          height={20}\r\n          style={{ marginRight: 10 }}\r\n        />{\" \"}\r\n        {address ? (\r\n          <span>{address.slice(0, 5) + \"...\" + address.slice(-2)}</span>\r\n        ) : (\r\n          <span>CONNECT</span>\r\n        )}{\" \"}\r\n      </button>\r\n      <button\r\n        style={{\r\n          float: \"right\",\r\n          marginRight: \"20px\",\r\n          marginTop: \"20px\",\r\n          backgroundColor: \"transparent\",\r\n          padding: \"10px 30px\",\r\n          borderColor: \"blue\",\r\n          borderRadius: \"20px\",\r\n          fontSize: \"20px\",\r\n          color: \"white\",\r\n          id:\"upload\",\r\n          display:\"none\",\r\n\r\n        }}\r\n        disabled={address === \"\" || flag === \"flag\"}\r\n        onClick={SaveScore}\r\n      >\r\n        Upload Score\r\n      </button>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {/* <th>#</th> */}\r\n            <th>Address</th>\r\n            <th>Counts</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <td style={{ width: \"70%\" }}>\r\n            {tbladdresses.map((itemAddress) => (\r\n              <tr>{itemAddress.slice(0, 5) + \"...\" + itemAddress.slice(-3)}</tr>\r\n            ))}\r\n          </td>\r\n          <td>\r\n            {tblcounts.map((itemCounts) => (\r\n              <tr>{itemCounts}</tr>\r\n            ))}\r\n          </td>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\nexport default ConnectBtn;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Count from \"./component/Count\";\nimport ConnectBtn from \"./component/ConnectBtn\";\n\n\nexport default function App() {\n  return (\n    <>\n      <ConnectBtn />\n      {/* <Count /> */}\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}