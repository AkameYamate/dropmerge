{"version":3,"sources":["assets/metamask.png","component/ConnectBtn.js","App.js","index.js"],"names":["ConnectBtn","useState","address","setAddress","setResult","tbladdresses","setTblAddresses","tblcounts","setTblCounts","setFlag","current","Date","date","getDate","getMonth","getFullYear","useEffect","axios","post","then","res","data","addresses","counts","catch","err","console","log","setInterval","document","getElementById","value","star","setTimeout","score","style","backgroundColor","padding","borderColor","borderRadius","fontSize","color","marginTop","className","onClick","window","ethereum","request","method","accs","length","sessionStorage","setItem","dater","alt","metamaskicon","src","width","height","marginRight","slice","marginLeft","map","itemAddress","itemCounts","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8c680b76.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/metamask.7d8c66c4.png\";","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport metamaskicon from \"../assets/metamask.png\";\r\n\r\nconst ConnectBtn = () => {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [result, setResult] = useState(0);\r\n  const [tbladdresses, setTblAddresses] = useState([]);\r\n  const [tblcounts, setTblCounts] = useState([]);\r\n  const [flag, setFlag] = useState(\"\");\r\n\r\n  const current = new Date();\r\n  const date = `${current.getDate()}/${\r\n    current.getMonth() + 1\r\n  }/${current.getFullYear()}`;\r\n\r\n  const SaveScore = () => {\r\n    setTimeout(function () {\r\n      setFlag(\"flag\");\r\n    }, 0);\r\n    setTimeout(function () {\r\n      setFlag(\"\");\r\n    }, 5000);\r\n\r\n    setResult(document.getElementById(\"game_mark\").value);\r\n\r\n    axios\r\n      .post(\"/api/saveScore\", {\r\n        score: document.getElementById(\"game_mark\").value,\r\n        address: address,\r\n        date: date,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    axios\r\n      .post(\"/api/getCount\", { date: date })\r\n      .then((res) => {\r\n        setTblAddresses(res.data.addresses);\r\n        setTblCounts(res.data.counts);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const handleConnect = () => {\r\n    const { ethereum } = window;\r\n\r\n    if (ethereum) {\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((accs) => {\r\n          if (accs.length) {\r\n            setAddress(accs[0]);\r\n\r\n            window.sessionStorage.setItem(\"connect\", \"1\");\r\n\r\n            axios\r\n              .post(\"/api/saveAddress\", {\r\n                address: accs[0],\r\n                dater: date,\r\n              })\r\n              .then((res) => {\r\n                console.log(res);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n            axios\r\n              .post(\"/api/getCount\", { date: date })\r\n              .then((res) => {\r\n                setTblAddresses(res.data.addresses);\r\n                setTblCounts(res.data.counts);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          }\r\n        });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"/api/getCount\", { date: date })\r\n      .then((res) => {\r\n        setTblAddresses(res.data.addresses);\r\n        setTblCounts(res.data.counts);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    axios\r\n      .post(\"/api/deleteCount\", { date: date })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const getRestart = () => {\r\n    if (document.getElementById(\"game_restart\").value == \"save\") {\r\n      SaveScore();\r\n\r\n      document.getElementById(\"game_restart\").value = \"\";\r\n    }\r\n  };\r\n  const getStar = () => {\r\n    \r\n    if (document.getElementById(\"game_state\").value == \"true\") {\r\n      // console.log(address,\":\",date,\":\",document.getElementById(\"starcount\").value)\r\n      axios\r\n      .post(\"/api/SaveStar\", {\r\n        star: document.getElementById(\"starcount\").value,\r\n        address: address,\r\n        date: date,\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n      document.getElementById(\"game_state\").value = \"false\";\r\n    }\r\n  };\r\n  setInterval(getStar, 1);\r\n  setInterval(getRestart, 1);\r\n  return (\r\n    <>\r\n      <button\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          padding: \"10px 30px\",\r\n          borderColor: \"blue\",\r\n          borderRadius: \"20px\",\r\n          fontSize: \"20px\",\r\n          color: \"white\",\r\n          marginTop: \"15%\",\r\n        }}\r\n        className=\"connectbtn\"\r\n        onClick={handleConnect}\r\n      >\r\n        <img\r\n          alt={metamaskicon}\r\n          src={metamaskicon}\r\n          width={20}\r\n          height={20}\r\n          style={{ marginRight: 10 }}\r\n        />{\" \"}\r\n        {address ? (\r\n          <span>{address.slice(0, 5) + \"...\" + address.slice(-2)}</span>\r\n        ) : (\r\n          <span>CONNECT</span>\r\n        )}{\" \"}\r\n      </button>\r\n\r\n      {/* <button\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          padding: \"10px 30px\",\r\n          borderColor: \"blue\",\r\n          borderRadius: \"20px\",\r\n          fontSize: \"20px\",\r\n          color: \"white\",\r\n          id: \"upload\",\r\n          display: \"none\",\r\n        }}\r\n        disabled={address === \"\" || flag === \"flag\"}\r\n        onClick={SaveScore}\r\n      >\r\n        Upload Score\r\n      </button> */}\r\n      <table style={{ width: \"50%\", marginTop: \"80px\", marginLeft: \"25%\" }}>\r\n        <thead>\r\n          <tr>\r\n            {/* <th>#</th> */}\r\n            <th>Address</th>\r\n            <th>Counts</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <td>\r\n            {tbladdresses.map((itemAddress) => (\r\n              <tr>{itemAddress.slice(0, 5) + \"...\" + itemAddress.slice(-3)}</tr>\r\n            ))}\r\n          </td>\r\n          <td>\r\n            {tblcounts.map((itemCounts) => (\r\n              <tr>{itemCounts}</tr>\r\n            ))}\r\n          </td>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\nexport default ConnectBtn;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Count from \"./component/Count\";\nimport ConnectBtn from \"./component/ConnectBtn\";\n\n\nexport default function App() {\n  return (\n    <>\n      <ConnectBtn />\n      {/* <Count /> */}\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}