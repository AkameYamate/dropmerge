{"version":3,"sources":["assets/metamask.png","component/ConnectBtn.js","App.js","index.js"],"names":["ConnectBtn","useState","address","setAddress","tbladdresses","setTblAddresses","tblcounts","setTblCounts","current","Date","date","getDate","getMonth","getFullYear","date1","getHours","getMinutes","SaveScore","axios","post","score","document","getElementById","value","then","res","catch","err","console","log","data","addresses","counts","setTimeout","handleConnect","window","ethereum","request","method","accs","length","sessionStorage","setItem","dater","setInterval","star","useEffect","style","backgroundColor","padding","borderColor","borderRadius","fontSize","color","marginTop","className","onClick","alt","metamaskicon","src","width","height","marginRight","slice","marginLeft","map","itemAddress","itemCounts","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.9969ba2b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/metamask.7d8c66c4.png\";","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport metamaskicon from \"../assets/metamask.png\";\r\n\r\nconst ConnectBtn = () => {\r\n  const [address, setAddress] = useState(\"\");\r\n  const [tbladdresses, setTblAddresses] = useState([]);\r\n  const [tblcounts, setTblCounts] = useState([]);\r\n\r\n  const current = new Date();\r\n  const date = `${current.getDate()}/${\r\n    current.getMonth() + 1\r\n  }/${current.getFullYear()}`;\r\n  const date1= `${current.getHours()}H:${current.getMinutes()}M`;\r\n\r\n  const SaveScore = () => {\r\n    axios\r\n      .post(\"http://localhost:5000/api/SaveScore\", {\r\n        score: document.getElementById(\"game_mark\").value,\r\n        address: address,\r\n        date: date,\r\n      })\r\n      .then((res) => {\r\n        // console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/getCount\", { date: date })\r\n      .then((res) => {\r\n        setTblAddresses(res.data.addresses);\r\n        setTblCounts(res.data.counts);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    setTimeout(handleConnect, 1000);\r\n  };\r\n  const handleConnect = () => {\r\n    const { ethereum } = window;\r\n\r\n    if (ethereum) {\r\n      window.ethereum\r\n        .request({ method: \"eth_requestAccounts\" })\r\n        .then((accs) => {\r\n          if (accs.length) {\r\n            setAddress(accs[0]);\r\n\r\n            window.sessionStorage.setItem(\"connect\", \"1\");\r\n\r\n            axios\r\n              .post(\"http://localhost:5000/api/saveAddress\", {\r\n                address: accs[0],\r\n                dater: date,\r\n              })\r\n              .then((res) => {\r\n                // console.log(res);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n            axios\r\n              .post(\"http://localhost:5000/api/getCount\", { date: date })\r\n              .then((res) => {\r\n                setTblAddresses(res.data.addresses);\r\n                setTblCounts(res.data.counts);\r\n              })\r\n              .catch((err) => {\r\n                console.log(err);\r\n              });\r\n          }\r\n        });\r\n    }\r\n    setTimeout(SaveScore, 1000);\r\n  };\r\n\r\n  const getStar = () => {\r\n \r\n    if (document.getElementById(\"game_state\").value == \"true\") {\r\n      SaveScore();\r\n      axios\r\n        .post(\"http://localhost:5000/api/SaveStar\", {\r\n          star: document.getElementById(\"starcount\").value,\r\n          address: address,\r\n          date: date,\r\n          date1:date1,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n        axios\r\n        .post(\"http://localhost:5000/api/ESaveStar\", {\r\n          star: document.getElementById(\"starcount\").value,\r\n          address: address,\r\n\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n        document.getElementById(\"starcount\").value=0;\r\n      axios\r\n        .post(\"http://localhost:5000/api/EverySaveScore\", {\r\n          score: document.getElementById(\"game_mark\").value,\r\n          address: address,\r\n          date: date,\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      axios\r\n        .post(\"http://localhost:5000/api/getCount\", { date: date })\r\n        .then((res) => {\r\n          setTblAddresses(res.data.addresses);\r\n          setTblCounts(res.data.counts);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      document.getElementById(\"game_state\").value = \"false\";\r\n    }\r\n  };\r\n  setInterval(getStar, 1);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"http://localhost:5000/api/getCount\", { date: date })\r\n      .then((res) => {\r\n        setTblAddresses(res.data.addresses);\r\n        setTblCounts(res.data.counts);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n\r\n    axios\r\n      .post(\"http://localhost:5000/api/deleteCount\", { date: date })\r\n      .then((res) => {\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <button\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          padding: \"10px 30px\",\r\n          borderColor: \"blue\",\r\n          borderRadius: \"20px\",\r\n          fontSize: \"20px\",\r\n          color: \"white\",\r\n          marginTop: \"15%\",\r\n        }}\r\n        className=\"connectbtn\"\r\n        onClick={handleConnect}\r\n      >\r\n        <img\r\n          alt={metamaskicon}\r\n          src={metamaskicon}\r\n          width={20}\r\n          height={20}\r\n          style={{ marginRight: 10 }}\r\n        />{\" \"}\r\n        {address ? (\r\n          <span>{address.slice(0, 5) + \"...\" + address.slice(-2)}</span>\r\n        ) : (\r\n          <span>CONNECT</span>\r\n        )}{\" \"}\r\n      </button>\r\n\r\n      {/* <button\r\n        style={{\r\n          backgroundColor: \"transparent\",\r\n          padding: \"10px 30px\",\r\n          borderColor: \"blue\",\r\n          borderRadius: \"20px\",\r\n          fontSize: \"20px\",\r\n          color: \"white\",\r\n          id: \"upload\",\r\n          display: \"none\",\r\n        }}\r\n        disabled={address === \"\" || flag === \"flag\"}\r\n        onClick={SaveScore}\r\n      >\r\n        Upload Score\r\n      </button> */}\r\n      <table style={{ width: \"50%\", marginTop: \"80px\", marginLeft: \"25%\" }}>\r\n        <thead>\r\n          <tr>\r\n            {/* <th>#</th> */}\r\n            <th>Address</th>\r\n            <th>Counts</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <td>\r\n            {tbladdresses.map((itemAddress) => (\r\n              <tr>{itemAddress.slice(0, 5) + \"...\" + itemAddress.slice(-3)}</tr>\r\n            ))}\r\n          </td>\r\n          <td>\r\n            {tblcounts.map((itemCounts) => (\r\n              <tr>{itemCounts}</tr>\r\n            ))}\r\n          </td>\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\nexport default ConnectBtn;\r\n","import \"./App.css\";\nimport React from \"react\";\nimport Count from \"./component/Count\";\nimport ConnectBtn from \"./component/ConnectBtn\";\n\n\nexport default function App() {\n  return (\n    <>\n      <ConnectBtn />\n      {/* <Count /> */}\n    </>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}